{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keySymbol","handleDocumentKeyup","e","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,UAAW,IAHf,EAcEC,oBAAsB,SAACC,GACjBA,EAAEC,MACJ,EAAKC,SAAS,CAAEL,YAAY,IAC5B,EAAKK,SAAS,CAAEJ,UAAWE,EAAEC,QAjBnC,uDAME,WACEE,SAASC,iBAAiB,QAASC,KAAKN,uBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAX/C,oBAqBE,WACE,MAAkCM,KAAKT,MAA/BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAEpB,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACqBC,EADrB,KAEP,kCA7Bd,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.f97e73b4.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: false,\n    keySymbol: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentKeyup);\n  }\n\n  handleDocumentKeyup = (e: KeyboardEvent) => {\n    if (e.key) {\n      this.setState({ pressedKey: true });\n      this.setState({ keySymbol: e.key });\n    }\n  };\n\n  render() {\n    const { pressedKey, keySymbol } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${keySymbol}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}